generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   // Add first name
  lastName  String   // Add last name
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())

  // Relations
  notes     Note[]
  auditLogs AuditLog[]
  noteVersions NoteVersion[] // Added to track the versions created by the user
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  isStarred Boolean  @default(false)  // For starred notes
  isImportant Boolean @default(false) // For important notes
  isArchived Boolean @default(false)  // For archived notes
  tags      String[]  // Array of strings for tags

  // Relations
  user      User      @relation(fields: [userId], references: [id])
  auditLogs AuditLog[]
  versions  NoteVersion[]  // Added to store note versions
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  createdAt DateTime @default(now())
  userId    Int
  noteId    Int?

  // Relations
  user      User   @relation(fields: [userId], references: [id])
  note      Note?  @relation(fields: [noteId], references: [id])
}

// New model for storing note version history
model NoteVersion {
  id        Int      @id @default(autoincrement())
  version   Int      @default(1)
  title     String
  content   String
  createdAt DateTime @default(now())
  action    String   // 'update' or 'delete'
  noteId    Int
  note      Note     @relation(fields: [noteId], references: [id])
  userId    Int      // The user who made the change
  user      User     @relation(fields: [userId], references: [id])
}
  